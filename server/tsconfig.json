{
  "compilerOptions": {
    /* Базовые опции */
    // "incremental": true,                   /* Включить инкрементную компиляцию. */
    "target": "ES5",                          /* Указание версии ECMAScript: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "commonjs",                     /* Указание модели генерации кода: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    // "lib": [],                             /* Указание файлов и библиотек, которые будут включены в компиляцию. */
    // "allowJs": true,                       /* Разрешить Javascript файлы для компиляции. */
    // "checkJs": true,                       /* Сообщить об ошибках в .js файлах. */
    // "jsx": "preserve",                     /* Указание JSX при генерации: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                   /* Создает соответствующий '.d.ts' file. */
    // "declarationMap": true,                /* Создает sourcemap для каждого соответствующего '.d.ts' file. */
    "sourceMap": true,                        /* Создает соответствующий '.map' file. */
    // "outFile": "./",                       /* Директория для скомпилированных файл. */
    "outDir": "./build",                      /* Директория для исходныч файлов. */
    "rootDir": "./src",                       /* Указание корневого каталога входных данных. Используется для управления структурой выходного каталога с --outDir. */
    // "composite": true,                     /* Включить компиляцию проекта */
    // "tsBuildInfoFile": "./",               /* Указание файла для хранения информации инкрементной компиляции */
    "removeComments": true,                   /* Не отправлять комментарии на вывод. */
    // "noEmit": true,                        /* Не создавать выходных файлов. */
    // "importHelpers": true,                 /* Не генерировать вспомогательные функции наподобие __extends в выходных файлах. */
    // "downlevelIteration": true,            /* Обеспечьте полную поддержку итераций для for - in, ..., деструктуризации при настройке на ES5 или ES3. */
    // "isolatedModules": true,               /* Обрабатывать каждый файл, как отдельный изолированный модуль. */

    /* Опции строгих проверок типов */
    "strict": true,                           /* Включить все строги проверки типов: noImplicitAny, noImplicitThis, alwaysStrict, strictNullChecks, strictFunctionTypes, strictPropertyInitialization?. */
    // "noImplicitAny": true,                 /* Показывать ошибку, если где-то задан тип "any" type. */
    // "strictNullChecks": true,              /* Значения "null" и "undefined" могут быть присвоены только значениям данного типа и значениям только с типом "any". */
    // "strictFunctionTypes": true,           /* Включить строгую проверку типов функций. */
    // "strictBindCallApply": true,           /* Включить строгие методы 'bind', 'call' и 'apply' для функций. */
    // "strictPropertyInitialization": true,  /* Включить строгую проверку инициализации свойств в классах. */
    // "noImplicitThis": true,                /* Показывать ошибку на "this", если где-то задан тип "any" type. */
    // "alwaysStrict": true,                  /* Компилировать ли каждый файл в строгом режиме и создавать ли 'use strict' для каждого выходного файла. */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* Показывать ошибку, если где-то найдены неиспользуемые локальные значения. */
    // "noUnusedParameters": true,            /* Показывать ошибку, если где-то найдены неиспользуемые параметры. */
    // "noImplicitReturns": true,             /* Сообщить об ошибке, когда не все пути кода в функции возвращают значение. */
    // "noFallthroughCasesInSwitch": true,    /* Сообщить об ошибке в случае обнаружения проваливания в конструкции switch-case. */

    /* Опции размещения модуля */
    // "moduleResolution": "node",            /* Определить способ поиска модулей в папках: как в Node.js или классический, как в TypeScript 1.5 и ниже. */
    // "baseUrl": "./",                       /* Путь до базовой папки для поиска не относительных путей до файлов. */
    // "paths": {},                           /* Указание сопоставления маршрутов для вычисления по сравнению с параметром baseUrl.. */
    // "rootDirs": [],                        /* Список корневых папок, совокупный контент которых представляет структуру проекта для компиляции. */
    // "typeRoots": [],                       /* По умолчанию все видимые в проекте пакеты "@types", расположенные в папках "node_modules" на всех уровнях вложенности, используются при компиляции. */
    // "types": [],                           /* Файлы объявлений типов для включения в компиляцию. */
    // "allowSyntheticDefaultImports": true,  /* Разрешить импортировать модули не имеющие внутри себя "import default". */
    "esModuleInterop": true,                  /* Создать хелперы __importStar и __importDefault для обеспечения совместимости с экосистемой Babel и включить allowSyntheticDefaultImports для совместимости с системой типов. */
    // "preserveSymlinks": true,              /* Не заменять символические ссылки на их реальный путь, обрабатывать символический файл как реальный. */
    // "allowUmdGlobalAccess": true,          /* Разрешить доступ к глобальным переменным UMD из модулей. */

    /* Source Map Опции */
    // "sourceRoot": "",                      /* Путь до папки, в которой дебаггер должен искать исходные source файлы. */
    // "mapRoot": "",                         /* Путь до папки, в которой дебаггер браузера должен будет искать файлы с source map. */
    // "inlineSourceMap": true,               /* Помещать ли source map в итоговый файл, вместо того чтобы иметь отдельный файл с source map. */
    // "inlineSources": true,                 /* Помещать ли source в итоговый файл рядом с source map: требуется установить '--inlineSourceMap' или '--sourceMap'. */

    /* Эксперементальные опции */
    // "experimentalDecorators": true,        /* Включить экспериментальную поддержку декораторов EcmaScript. */
    // "emitDecoratorMetadata": true,         /* Создавать метаданные для объявлений декораторов в исходном коде. */

    /* Продвинутые опции */
    "forceConsistentCasingInFileNames": true  /* Запретить несогласованные ссылки на один и тот же файл. */
  }
}